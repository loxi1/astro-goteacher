---
import Button from './Button.astro'
import { Icon } from 'astro-icon/components'

type Props = {
  id: string
  title?: string
  classes?: string
}

const { id, title, classes } = Astro.props
---

<div {...(id ? { id } : {})} class:list={['modal', { [`${classes}`]: classes }]}>
  <div class="modal__popup">
    <!-- Cabecera del modal -->
    <div class="modal__header">
      {title && <h2 class="modal__title">{title}</h2>}
      <Button size="sm" style="neutral" classes="modal__close" variation="link">
        <!-- Ícono más grande -->
        <Icon name="x-mark" class="dark:text-neutral-50 size-6" />
        <span class="sr-only">Close</span>
      </Button>
    </div>

    <!-- Cuerpo del modal (con scroll interno si excede la altura) -->
    <div class="modal__body flex-1 overflow-auto">
      <slot />
    </div>
  </div>
</div>

<style>
  /* Contenedor que ocupa toda la pantalla y oculta hasta que se abra */
  .modal {
    @apply fixed inset-0 z-50 flex h-0 w-full items-center justify-center overflow-hidden bg-black/50 backdrop-blur-sm transition-all duration-300 dark:bg-neutral-900/80 [&.open]:h-full;
  }

  /* Tarjeta interna del modal */
  .modal__popup {
	@apply m-4 flex w-full max-w-7xl h-[95vh] translate-y-6 flex-col overflow-hidden rounded border border-neutral-100 bg-white text-neutral-500 opacity-0 shadow-xl shadow-neutral-700/5 transition-all duration-500 dark:border-neutral-800 dark:bg-neutral-900 dark:text-neutral-200 dark:shadow-neutral-950/50;
}

  /* Cabecera del modal: título + botón cerrar */
  .modal__header {
    @apply flex items-center justify-between px-6 py-3 border-b border-neutral-200 dark:border-neutral-700 bg-white dark:bg-neutral-900;
  }

  /* Título más grande y vistoso */
  .modal__title {
    @apply text-xl font-bold text-neutral-800 dark:text-white;
  }

  /* Botón de cierre más grande */
  .modal__close {
    @apply text-gray-600 dark:text-neutral-300 hover:text-red-500 text-2xl cursor-pointer;
  }
  .modal__close:focus {
    outline: 2px solid #f87171;
    outline-offset: 2px;
  }

  /* Cuerpo del modal, con scroll si el contenido excede */
  .modal__body {
    @apply flex-1 p-4;
  }
  /* Cuando el contenedor padre tenga la clase `.open` */
.modal.open .modal__popup {
  @apply translate-y-0 opacity-100;
}
</style>
