<!-- Scripts for UI components -->
<script async defer is:inline>
	function closeModal(modal) {
		if (modal && modal.classList.contains('modal')) {
		modal.classList.remove('open')
		}
	}

	document.addEventListener('astro:page-load', () => {
		// Menu Dropdown
		const menuItems = document.querySelectorAll('.header__menu-item')
		menuItems.forEach((menuItem) => {
			const submenu = menuItem.querySelector('.header__submenu')
			const link = menuItem.querySelector('.header__menu-link')

			if (submenu && link) {
				link.addEventListener('click', function (event) {
					event.preventDefault()
					menuItem.classList.toggle('open')
				})
			}
		})
		document.addEventListener('click', function (event) {
			const target = event.target

			menuItems.forEach((menuItem) => {
				const submenu = menuItem.querySelector('.header__submenu')
				if (submenu && !menuItem.contains(target)) {
					menuItem.classList.remove('open')
				}
			})
		})

		// Menu toggle
		const headerToggle = document.querySelector('.header__toggle')
		const headerMenu = document.querySelector('.header__menu')
		if (headerToggle && headerMenu) {
			headerToggle.addEventListener('click', () => {
				headerToggle.classList.toggle('header__toggle--open')
				const isExpanded = headerToggle.getAttribute('aria-expanded') === 'true'
				const newExpandedValue = isExpanded ? 'false' : 'true'
				headerToggle.setAttribute('aria-expanded', newExpandedValue)
				headerMenu.classList.toggle('header__menu--open')
			})
		}

		// Modals
		function openModal(modal, src = '', titulo = '') {
			if (modal && modal.classList.contains('modal')) {
				// Set title
				if (titulo) {
					const titleElement = modal.querySelector('.modal__title');
					if (titleElement) {
						titleElement.textContent = titulo;
					}
				}

				// Set iframe src
				const iframe = modal.querySelector('iframe');
				if (iframe && src) {
					iframe.src = src;
				}

				modal.classList.add('open');
				console.log('Modal abierto:', titulo, src);
			}
		}


		const modalButtons = document.querySelectorAll('[data-modal]')

		modalButtons.forEach(function (button) {
			button.addEventListener('click', function () {
				const modalId = button.getAttribute('data-modal')
				const modal = document.getElementById(modalId)
				// âœ… Extrae los atributos personalizados
				const src = button.getAttribute('data-src');
    			const titulo = button.getAttribute('data-title');
				console.log('src:', src);
				console.log('titulo:', titulo);
				openModal(modal, src, titulo)
			})
		})
		document.querySelectorAll('.modal').forEach(function (modal) {
			modal.addEventListener('click', function (event) {
				const modalContent = modal.querySelector('.modal__popup')
				if (!modalContent.contains(event.target)) {
					closeModal(modal)
				}
			})
			const close = modal.querySelector('.modal__close')
			close.addEventListener('click', function (event) {
				event.stopPropagation()
				closeModal(modal)
			})
		})
	})
</script>

<!-- Scroll animations -->
<script>
	const initializeObserver = () => {
		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.add('scroll-animated')
				}
			})
		})

		const elements = document.querySelectorAll('.scroll-animation .col')

		elements.forEach((element) => {
			observer.observe(element)
		})
	}

	document.addEventListener('DOMContentLoaded', () => {
		initializeObserver()
	})

	document.addEventListener('astro:page-loaded', () => {
		initializeObserver()
	})

	document.addEventListener('astro:after-swap', () => {
		initializeObserver()
	})
</script>

<!-- Light/Dark mode  -->
<script>
	if (document.documentElement.classList.contains('mode-auto')) {
		const applyTheme = () => {
			if (
				localStorage.theme === 'dark' ||
				(!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
			) {
				document.documentElement.classList.add('dark')
			} else {
				document.documentElement.classList.remove('dark')
			}
		}
		const setupThemeSwitcher = () => {
			const themeSwitcher = document.getElementById('theme-selector')
			if (themeSwitcher) {
				themeSwitcher.addEventListener('click', () => {
					if (localStorage.theme === 'dark') {
						localStorage.theme = 'light'
						document.documentElement.classList.remove('dark')
					} else {
						localStorage.theme = 'dark'
						document.documentElement.classList.add('dark')
					}
				})
			}
		}
		document.addEventListener('DOMContentLoaded', () => {
			applyTheme()
			setupThemeSwitcher()
		})
		document.addEventListener('astro:page-loaded', () => {
			applyTheme()
			setupThemeSwitcher()
		})
		document.addEventListener('astro:after-swap', () => {
			applyTheme()
			setupThemeSwitcher()
		})
	} else if (document.documentElement.classList.contains('mode-dark')) {
		document.documentElement.classList.add('dark')
	} else if (document.documentElement.classList.contains('mode-light')) {
		document.documentElement.classList.remove('dark')
	}
</script>
